import type { StoredProblem } from '@/types'

export default [
  {
    title: 'インクリメント',
    env: 'GHC 8.6.5',
    map: { from: '1', to: '2' },
    sheet: ['f = ■'],
    choices: ['(+1)', '(*1)'],
    collectAnswer: ['(+1)'],
    comment: 'インクリメントします',
  },
  {
    title: 'デクリメント',
    env: 'GHC 8.6.5',
    map: { from: '2', to: '1' },
    sheet: ['f = ■ 1'],
    choices: ['(-)', 'subtract'],
    collectAnswer: ['subtract'],
    comment: '(-) 1 だと、1 - x となってしまいます',
  },
  {
    title: '絶対値',
    env: 'GHC 8.6.5',
    map: { from: '-100', to: '100' },
    sheet: ['f = ■'],
    choices: ['abs', 'signum'],
    collectAnswer: ['abs'],
    comment: 'abs は絶対値を取る関数です',
  },
  {
    title: '7 の剰余',
    env: 'GHC 8.6.5',
    map: { from: '123', to: '4' },
    sheet: ['f = (■ 7)'],
    choices: ['`div`', '`mod`', 'div', 'mod'],
    collectAnswer: ['`mod`'],
    comment: 'mod 7 とすると 7 mod x になってしまいます',
  },
  {
    title: '半分に',
    env: 'GHC 8.6.5',
    map: { from: '4', to: '2' },
    sheet: ['f = (■ 2)'],
    choices: ['`div`', '/'],
    collectAnswer: ['`div`'],
    comment: '(/) は Fractional クラスのメソッドです',
  },
  {
    title: 'やっぱり偶数がいい',
    env: 'GHC 8.6.5',
    map: { from: '4', to: 'True' },
    sheet: ['f = ■ . odd'],
    choices: ['not', 'id'],
    collectAnswer: ['not'],
    comment: 'not で真理値を反転することができます',
  },
  {
    title: '正の整数にする',
    env: 'GHC 8.6.5',
    map: { from: '-5', to: '1' },
    sheet: ['f = ■ 1'],
    choices: ['max', 'min'],
    collectAnswer: ['max'],
    comment: 'max で大きい方を取得できます',
  },
  {
    title: '倍にする',
    env: 'GHC 8.6.5',
    map: { from: '1', to: '2' },
    sheet: ['f = \\x -> x ■ x'],
    choices: ['+', '*'],
    collectAnswer: ['+'],
    comment: 'ラムダ式を用いた数字を倍にする関数です',
  },
  {
    title: '文字を付ける',
    env: 'GHC 8.6.5',
    map: { from: 'boll', to: 'aboll' },
    sheet: ['f = ■ \'a\''],
    choices: ['(:)', '(++)'],
    collectAnswer: ['(:)'],
    comment: '文字列の場合はリストの連結になるので (++) を使います',
  },
] as StoredProblem[]
